/*********
  Rui Santos
  Complete project details at https://RandomNerdTutorials.com/esp-now-one-to-many-esp32-esp8266/
  
  Permission is hereby granted, free of charge, to any person obtaining a copy
  of this software and associated documentation files.
  
  The above copyright notice and this permission notice shall be included in all
  copies or substantial portions of the Software.
*********/

#include <esp_now.h>
#include <WiFi.h>

int rate;

//Structure example to receive data
//Must match the sender structure
typedef struct test_struct {
  int x;
  int y;
  int rate;
} test_struct;

//Create a struct_message called myData
test_struct myData;

//callback function that will be executed when data is received
void OnDataRecv(const uint8_t * mac, const uint8_t *incomingData, int len) {
  memcpy(&myData, incomingData, sizeof(myData));
  Serial.print("Bytes received: ");
  Serial.println(len);
  Serial.print("x: ");
  Serial.println(myData.x);
  Serial.print("y: ");
  Serial.println(myData.y);
  Serial.print("rate: ");
  Serial.println(myData.rate);
  Serial.println();


}
 
void setup() {
  //Initialize Serial Monitor
  Serial.begin(115200);
  
  //Set device as a Wi-Fi Station
  WiFi.mode(WIFI_STA);

  //Init ESP-NOW
  if (esp_now_init() != ESP_OK) {
    Serial.println("Error initializing ESP-NOW");
    return;
  }
  
  // Once ESPNow is successfully Init, we will register for recv CB to
  // get recv packer info
  esp_now_register_recv_cb(OnDataRecv);

    pinMode(4, OUTPUT);
    pinMode(16, OUTPUT);
    pinMode(17, OUTPUT);
   
}
 
void loop() {

     if (myData.rate = myData.rate) {
 

  digitalWrite(4, HIGH);   // turn the LED on (HIGH is the voltage level)
  delay(myData.rate/5);                       // wait for a second
  digitalWrite(4, LOW);    // turn the LED off by making the voltage LOW
  delay(myData.rate);  // wait for a second
  digitalWrite(16, HIGH);   // turn the LED on (HIGH is the voltage level)
  delay(myData.rate/5);                       // wait for a second
  digitalWrite(16, LOW);    // turn the LED off by making the voltage LOW
  delay(myData.rate);
  digitalWrite(17, HIGH);   // turn the LED on (HIGH is the voltage level)
  delay(myData.rate/5);                       // wait for a second
  digitalWrite(17, LOW);    // turn the LED off by making the voltage LOW
  delay(myData.rate);  
}

}
